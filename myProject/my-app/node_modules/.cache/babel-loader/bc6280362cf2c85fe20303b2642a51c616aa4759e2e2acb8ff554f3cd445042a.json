{"ast":null,"code":"var _jsxFileName = \"/Users/venom/Desktop/project/React/myProject/my-app/src/components/FilmCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FilmCard.css';\nimport Star from '../resources/starGray';\nimport ReviewsPeoples from './ReviewsPeoples';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmCard = _ref => {\n  _s();\n  let {\n    dataFilms\n  } = _ref;\n  const [stateAllfimls, setStateallfilms] = useState(dataFilms);\n  // const  [stateAllReviews, setStateallreviews] = useState(dataFilms.reviews)\n\n  // const [stateAllReviews, setStateallreviews] = useState(allReviews)\n  let changerStatedataFilms = () => {\n    console.log(stateAllfimls);\n    setStateallfilms([...stateAllfimls, {\n      id: 1,\n      title: \"Бэтмен\",\n      posterLink: \"https://avatars.mds.yandex.net/get-kinopoisk-image/6201401/4d924203-de93-4f05-9564-94ff08678516/3840x\",\n      date: 2022,\n      rating: 7.9,\n      review: '',\n      reviews: [{\n        name_all_reviews: '777788',\n        data_all_reviews: '666 dec',\n        otziv_all_reviews: 'polnoe efefjefeklle'\n      }, {\n        name_all_reviews: 'govnoizjopi',\n        data_all_reviews: '666 dec',\n        otziv_all_reviews: 'polnoe efefjefeklle'\n      }],\n      myRating: '',\n      description: \"После двух лет поисков правосудия на улицах Готэма Бэтмен становится для горожан олицетворением беспощадного возмездия. Когда в городе происходит серия жестоких нападений на высокопоставленных чиновников, улики приводят Брюса Уэйна в самые тёмные закоулки преступного мира, где он встречает Женщину-Кошку, Пингвина, Кармайна Фальконе и Загадочника. Теперь под прицелом оказывается сам Бэтмен, которому предстоит отличить друга от врага и восстановить справедливость во имя Готэма.\"\n    }]);\n  };\n  const test1Function = test3 => {\n    // console.log(test1 ,'+', test2, '+' ,test3, '+',test4)\n    setStateallfilms([...stateAllfimls, test3]);\n  };\n\n  // const countReviws = (newjopa) => {\n  //     setstateCountReviws([\n  //         ...stateCountReviws,\n  //         {newjopa}\n  //     ])        \n  // }\n\n  let newPlates;\n  if (stateAllfimls.length) {\n    newPlates = stateAllfimls.map(function (item) {\n      let stateAllReviews = item.reviews;\n\n      // console.log(stateAllReviews)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oneFilmBig\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oneFilm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list_container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"films_posterLink\",\n              src: item.posterLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desc_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"films_title\",\n              children: [item.title, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rate_review\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"average_rate\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"star_IMG\",\n                  children: Star\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"star_IMG\",\n                  children: Star\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"star_IMG\",\n                  children: Star\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"star_IMG\",\n                  children: Star\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"star_IMG\",\n                  children: Star\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summa_review\",\n                children: [\"  \\u041E\\u0442\\u0437\\u044B\\u0432\\u044B(\", countReviws(newjopa), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"films_description\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReviewsPeoples, {\n          props2: stateAllReviews,\n          testF: test1Function,\n          countReviws: countReviws\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, stateAllfimls.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    });\n  } else {\n    newPlates = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0444\\u0438\\u043B\\u044C\\u043C\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"films\",\n    children: newPlates\n  }, stateAllfimls.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(FilmCard, \"zyn0p1qLq72vuc3kSGhjams/sqA=\");\n_c = FilmCard;\nexport default FilmCard;\n\n//1. если массив не пустой бежим по массиву и находим элементы\n//2. выводим все эти элементы (фильмы)\n//3. бежим по массиву и находим еще один массив и его элементы проверяем что он не пустой\n//4. выводим эти элементы (отзывы к фильму)\n\n// function changerStateReviews(){\n//     // console.log(stateAllReviews)\n//     setStateallreviews([\n//         ...stateAllReviews\n//     ])\n\n// }\n\n// function changerStateReviews() {\n//     // console.log(stateAllReviews)\n//     setStateallreviews([\n//         ...stateAllReviews,\n//         {\n//             // id: nextId++,\n//             name_all_reviews: 'gena',\n//             data_all_reviews: '20 dec',\n//             zvezdi_all_reviews: '',\n//             otziv_all_reviews:'govno',\n\n//         }\n//     ])\n//   }\n\n// const jopa = () => {\n//     stateAllReviews.ob={\n//         name_all_reviews:'5',\n//         data_all_reviews:'7',\n//         zvezdi_all_reviews:'',\n//         otziv_all_reviews:'govno',\n//     })\n//     console.log(allReviews)\n// }\n\n// const { title, posterLink, description } = dataFilms\n\n//     Альберт, [26.12.2022 22:05]\n// Внутри него тебе надо создать функцию добавления отзыва\n\n// Альберт, [26.12.2022 22:05]\n// Она будет в себя принимать имя, коммент, рейтинг\n\n// Альберт, [26.12.2022 22:06]\n// И будет добавлять их в массив отзывов внутри FilmCard(скоре всего)\n\n// Альберт, [26.12.2022 22:06]\n// Эту функцию ты потом передаешь пропсом внутрь компонента ReviewForm\n\n// Фишка в том, что эта функция будет находиться выше ReviewForm - Соответсвенно у нее будет доступ к данным FilmCard\n// const AddReview = (name, comment, rating) => {\n//     stateAllReviews.reviews.push({\n//         name: name,\n//         comment: comment,\n//         rating: rating,\n//     });\n// }\nvar _c;\n$RefreshReg$(_c, \"FilmCard\");","map":{"version":3,"names":["React","useState","Star","ReviewsPeoples","FilmCard","dataFilms","stateAllfimls","setStateallfilms","changerStatedataFilms","console","log","id","title","posterLink","date","rating","review","reviews","name_all_reviews","data_all_reviews","otziv_all_reviews","myRating","description","test1Function","test3","newPlates","length","map","item","stateAllReviews","countReviws","newjopa"],"sources":["/Users/venom/Desktop/project/React/myProject/my-app/src/components/FilmCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FilmCard.css';\nimport Star from '../resources/starGray'\nimport ReviewsPeoples from './ReviewsPeoples'\n\n\n\nconst FilmCard = ({ dataFilms }) => {\n    \n\n       \n      \n    const [stateAllfimls,setStateallfilms] = useState(dataFilms)\n    // const  [stateAllReviews, setStateallreviews] = useState(dataFilms.reviews)\n\n    // const [stateAllReviews, setStateallreviews] = useState(allReviews)\n    let changerStatedataFilms =() =>{\n        console.log(stateAllfimls)\n        setStateallfilms([\n            ...stateAllfimls,\n            {\n                id: 1,\n                title: \"Бэтмен\",\n                posterLink: \"https://avatars.mds.yandex.net/get-kinopoisk-image/6201401/4d924203-de93-4f05-9564-94ff08678516/3840x\",\n                date: 2022,\n                rating: 7.9,\n                review: '',\n                reviews: [\n                  {\n                      name_all_reviews: '777788',\n                      data_all_reviews: '666 dec',\n                      otziv_all_reviews: 'polnoe efefjefeklle'\n                    },\n                  {\n                  name_all_reviews: 'govnoizjopi',\n                  data_all_reviews: '666 dec',\n                  otziv_all_reviews: 'polnoe efefjefeklle'\n                }\n              ],\n                myRating: '',\n                description: \"После двух лет поисков правосудия на улицах Готэма Бэтмен становится для горожан олицетворением беспощадного возмездия. Когда в городе происходит серия жестоких нападений на высокопоставленных чиновников, улики приводят Брюса Уэйна в самые тёмные закоулки преступного мира, где он встречает Женщину-Кошку, Пингвина, Кармайна Фальконе и Загадочника. Теперь под прицелом оказывается сам Бэтмен, которому предстоит отличить друга от врага и восстановить справедливость во имя Готэма.\"\n            }\n        ])\n    }\n    const test1Function = (test3) =>{\n        // console.log(test1 ,'+', test2, '+' ,test3, '+',test4)\n        setStateallfilms([\n            ...stateAllfimls,\n            test3\n        ])\n    }\n\n    // const countReviws = (newjopa) => {\n    //     setstateCountReviws([\n    //         ...stateCountReviws,\n    //         {newjopa}\n    //     ])        \n    // }\n    \n    let newPlates\n\n    if (stateAllfimls.length) {\n        newPlates = stateAllfimls.map(function (item) {\n\n            let stateAllReviews = item.reviews\n          \n            // console.log(stateAllReviews)\n            return (\n                <div key={stateAllfimls.id} className='oneFilmBig'>\n                    <div className=\"oneFilm\" >\n                        <div className=\"list_container\" >\n                            <img className=\"films_posterLink\" src={item.posterLink} />\n                            {/* <p className=\"films_date\">Date:{item.date}</p>\n                        <p className=\"films_rating\">Rating:{item.rating}</p> */}\n                        </div>\n                        <div className=\"desc_container\">\n                            <p className=\"films_title\">{item.title}:</p>\n                            <div className='rate_review'>\n                                <div className='average_rate'>\n                                    <svg className='star_IMG'>{Star}</svg>\n                                    <svg className='star_IMG'>{Star}</svg>\n                                    <svg className='star_IMG'>{Star}</svg>\n                                    <svg className='star_IMG'>{Star}</svg>\n                                    <svg className='star_IMG'>{Star}</svg>\n                                </div>\n                                <div className='summa_review'>  Отзывы({countReviws(newjopa)})</div>\n                                {/* <div className='summa_review' onClick={()=>{uberState()}}> teset</div> */}\n                            </div>\n\n\n                            <div className=\"films_description\">{item.description}</div>\n\n                        </div>\n\n                        {/* <div className=\"review_contetn\"> */}\n                        {/* <button className=\"films_feedback_click\">review</button> */}\n                        {/* <div className=\"films_reviews\">films_review:{item.review}</div>  */}\n                        {/* </div> */}\n                    </div>\n                   \n                    <ReviewsPeoples props2 = {stateAllReviews} testF = {test1Function} countReviws={countReviws}/> \n\n\n                </div>\n\n            )\n        })\n    } else {\n        newPlates = <p>Нет фильмов</p>\n    }\n    return (\n        <div key={stateAllfimls.id} className=\"films\">\n            {newPlates}\n        </div>\n\n\n    )\n}\n\nexport default FilmCard;\n\n//1. если массив не пустой бежим по массиву и находим элементы\n//2. выводим все эти элементы (фильмы)\n//3. бежим по массиву и находим еще один массив и его элементы проверяем что он не пустой\n//4. выводим эти элементы (отзывы к фильму)\n\n    // function changerStateReviews(){\n    //     // console.log(stateAllReviews)\n    //     setStateallreviews([\n    //         ...stateAllReviews\n    //     ])\n        \n        \n    // }\n\n    // function changerStateReviews() {\n    //     // console.log(stateAllReviews)\n    //     setStateallreviews([\n    //         ...stateAllReviews,\n    //         {\n    //             // id: nextId++,\n    //             name_all_reviews: 'gena',\n    //             data_all_reviews: '20 dec',\n    //             zvezdi_all_reviews: '',\n    //             otziv_all_reviews:'govno',\n            \n    //         }\n    //     ])\n    //   }\n    \n    // const jopa = () => {\n    //     stateAllReviews.ob={\n    //         name_all_reviews:'5',\n    //         data_all_reviews:'7',\n    //         zvezdi_all_reviews:'',\n    //         otziv_all_reviews:'govno',\n    //     })\n    //     console.log(allReviews)\n    // }\n\n    // const { title, posterLink, description } = dataFilms\n\n//     Альберт, [26.12.2022 22:05]\n// Внутри него тебе надо создать функцию добавления отзыва\n\n// Альберт, [26.12.2022 22:05]\n// Она будет в себя принимать имя, коммент, рейтинг\n\n// Альберт, [26.12.2022 22:06]\n// И будет добавлять их в массив отзывов внутри FilmCard(скоре всего)\n\n// Альберт, [26.12.2022 22:06]\n// Эту функцию ты потом передаешь пропсом внутрь компонента ReviewForm\n\n// Фишка в том, что эта функция будет находиться выше ReviewForm - Соответсвенно у нее будет доступ к данным FilmCard\n// const AddReview = (name, comment, rating) => {\n//     stateAllReviews.reviews.push({\n//         name: name,\n//         comment: comment,\n//         rating: rating,\n//     });\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}