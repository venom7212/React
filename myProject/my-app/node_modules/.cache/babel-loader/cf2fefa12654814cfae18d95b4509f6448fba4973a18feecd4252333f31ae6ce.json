{"ast":null,"code":"var _jsxFileName = \"/Users/iakov_t/Desktop/project/React/myProject/my-app/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Stars from './Stars';\nimport './ReviewForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = _ref => {\n  _s();\n  let {\n    pushNewReviews\n  } = _ref;\n  const [name, setName] = useState('');\n  const [review, setReview] = useState('');\n  const [rate, setRate] = useState(0);\n\n  // const [stateReviwPeoples,setStateallfilms] = useState(props3)\n\n  const inputHandler = (e, setter) => {\n    const value = e.currentTarget.value;\n    setter(value);\n  };\n  const resetStateInputs = () => {\n    setName('');\n    setReview('');\n    setRate(0);\n  };\n  const onClick = () => {\n    if (name && review && rate !== 0) {\n      const date = new Date();\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      const hrs = date.getHours();\n      const minutes = date.getMinutes();\n      const preparedDate = `${day < 10 ? 0 : ''}${day}.${month < 10 ? 0 : ''}${month}.${year} ${hrs}:${minutes}`;\n      pushNewReviews(name, review, preparedDate, rate);\n      resetStateInputs();\n    } else {\n      alert('Заполните основные поля');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReviewForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"headerReviewForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"nameReview\",\n        type: \"text\",\n        className: \"name_Review\",\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        value: name,\n        onChange: e => inputHandler(e, setName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stars, {\n        setStars: setRate,\n        starsCount: rate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"textReview\",\n      className: \"text_Review\",\n      placeholder: \"\\u041E\\u0442\\u0437\\u044B\\u0432 \\u043E \\u0444\\u0438\\u043B\\u044C\\u043C\\u0435\",\n      value: review,\n      onChange: e => inputHandler(e, setReview)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add__btn\",\n      onClick: onClick,\n      children: \" \\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewForm, \"i1CoUoMu8luIVJH+hFatgTs5TL4=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","Stars","ReviewForm","pushNewReviews","name","setName","review","setReview","rate","setRate","inputHandler","e","setter","value","currentTarget","resetStateInputs","onClick","date","Date","day","getDate","month","getMonth","year","getFullYear","hrs","getHours","minutes","getMinutes","preparedDate","alert"],"sources":["/Users/iakov_t/Desktop/project/React/myProject/my-app/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Stars from './Stars'\nimport './ReviewForm.css';\n\n\n\nconst ReviewForm = ({ pushNewReviews }) => {\n    const [name, setName] = useState('');\n    const [review, setReview] = useState('');\n    const [rate, setRate] = useState(0);\n\n    // const [stateReviwPeoples,setStateallfilms] = useState(props3)\n\n    const inputHandler = (e,setter) => {\n        const value = e.currentTarget.value\n        setter(value)\n    }\n\n\n    const resetStateInputs = () => {\n        setName('');\n        setReview('');\n        setRate(0);\n    }\n\n    const onClick = () => {\n        if (name && review && rate !== 0) {\n            const date = new Date();\n            const day = date.getDate();\n            const month = date.getMonth() + 1;\n            const year = date.getFullYear();\n            const hrs = date.getHours();\n            const minutes = date.getMinutes();\n            const preparedDate = `${day < 10 ? 0 : ''}${day}.${month < 10 ? 0 : ''}${month}.${year} ${hrs}:${minutes}`;\n            pushNewReviews(name, review, preparedDate, rate);\n            resetStateInputs()\n        } else {\n            alert('Заполните основные поля')\n        }\n    }\n\n    return (\n\n        <div className='ReviewForm'>\n            <div id='headerReviewForm'>\n                <input\n                    id='nameReview'\n                    type='text'\n                    className='name_Review'\n                    placeholder='Ваше имя'\n                    value={name}\n                    onChange={(e)=>(inputHandler(e,setName))}\n                ></input>\n\n                <Stars setStars={setRate} starsCount={rate} />\n\n            </div>\n            <input\n                id='textReview'\n                className='text_Review'\n                placeholder='Отзыв о фильме'\n                value={review}\n                onChange={(e)=>(inputHandler(e,setReview))}\n\n            ></input>\n            <button className='add__btn' onClick={onClick}> Оставить отзыв </button>\n        </div>\n\n    )\n}\n\n\n\nexport default ReviewForm;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,kBAAkB;AAAC;AAI1B,MAAMC,UAAU,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAEnC;;EAEA,MAAMU,YAAY,GAAG,CAACC,CAAC,EAACC,MAAM,KAAK;IAC/B,MAAMC,KAAK,GAAGF,CAAC,CAACG,aAAa,CAACD,KAAK;IACnCD,MAAM,CAACC,KAAK,CAAC;EACjB,CAAC;EAGD,MAAME,gBAAgB,GAAG,MAAM;IAC3BV,OAAO,CAAC,EAAE,CAAC;IACXE,SAAS,CAAC,EAAE,CAAC;IACbE,OAAO,CAAC,CAAC,CAAC;EACd,CAAC;EAED,MAAMO,OAAO,GAAG,MAAM;IAClB,IAAIZ,IAAI,IAAIE,MAAM,IAAIE,IAAI,KAAK,CAAC,EAAE;MAC9B,MAAMS,IAAI,GAAG,IAAIC,IAAI,EAAE;MACvB,MAAMC,GAAG,GAAGF,IAAI,CAACG,OAAO,EAAE;MAC1B,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,EAAE,GAAG,CAAC;MACjC,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;MAC/B,MAAMC,GAAG,GAAGR,IAAI,CAACS,QAAQ,EAAE;MAC3B,MAAMC,OAAO,GAAGV,IAAI,CAACW,UAAU,EAAE;MACjC,MAAMC,YAAY,GAAI,GAAEV,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAG,GAAEA,GAAI,IAAGE,KAAK,GAAG,EAAE,GAAG,CAAC,GAAG,EAAG,GAAEA,KAAM,IAAGE,IAAK,IAAGE,GAAI,IAAGE,OAAQ,EAAC;MAC1GxB,cAAc,CAACC,IAAI,EAAEE,MAAM,EAAEuB,YAAY,EAAErB,IAAI,CAAC;MAChDO,gBAAgB,EAAE;IACtB,CAAC,MAAM;MACHe,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBAEI;IAAK,SAAS,EAAC,YAAY;IAAA,wBACvB;MAAK,EAAE,EAAC,kBAAkB;MAAA,wBACtB;QACI,EAAE,EAAC,YAAY;QACf,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,aAAa;QACvB,WAAW,EAAC,6CAAU;QACtB,KAAK,EAAE1B,IAAK;QACZ,QAAQ,EAAGO,CAAC,IAAID,YAAY,CAACC,CAAC,EAACN,OAAO;MAAG;QAAA;QAAA;QAAA;MAAA,QACpC,eAET,QAAC,KAAK;QAAC,QAAQ,EAAEI,OAAQ;QAAC,UAAU,EAAED;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAE5C,eACN;MACI,EAAE,EAAC,YAAY;MACf,SAAS,EAAC,aAAa;MACvB,WAAW,EAAC,4EAAgB;MAC5B,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGK,CAAC,IAAID,YAAY,CAACC,CAAC,EAACJ,SAAS;IAAG;MAAA;MAAA;MAAA;IAAA,QAEtC,eACT;MAAQ,SAAS,EAAC,UAAU;MAAC,OAAO,EAAES,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EAAA;IAAA;IAAA;IAAA;EAAA,QACtE;AAGd,CAAC;AAAA,GA/DKd,UAAU;AAAA,KAAVA,UAAU;AAmEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}